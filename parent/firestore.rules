rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User data rules
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if isOwner(userId);
      
      // Audio history subcollection
      match /audio_history/{historyId} {
        // Users can read and write their own audio history
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) 
          && request.resource.data.keys().hasAll(['audioUrl', 'fileName', 'uploadedAt'])
          && request.resource.data.audioUrl is string
          && request.resource.data.fileName is string;
        allow update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }
      
      // User profile data
      match /profile/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
