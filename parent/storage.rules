rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidAudioFile() {
      return request.resource.contentType.matches('audio/.*');
    }
    
    function isUnderSizeLimit() {
      // Limit audio files to 50MB
      return request.resource.size < 50 * 1024 * 1024;
    }
    
    // User audio files
    match /users/{userId}/audio_files/{audioFile} {
      // Allow users to read and write their own audio files
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) 
        && isValidAudioFile() 
        && isUnderSizeLimit();
      allow delete: if isOwner(userId);
    }
    
    // User profile images (optional)
    match /users/{userId}/profile/{imageFile} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) 
        && request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB limit
      allow delete: if isOwner(userId);
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
